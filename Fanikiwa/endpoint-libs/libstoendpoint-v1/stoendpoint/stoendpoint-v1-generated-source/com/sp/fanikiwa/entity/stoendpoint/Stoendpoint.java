/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-03-26 20:30:19 UTC)
 * on 2015-07-04 at 07:59:55 UTC 
 * Modify at your own risk.
 */

package com.sp.fanikiwa.entity.stoendpoint;

/**
 * Service definition for Stoendpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link StoendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Stoendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the stoendpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://1-dot-fanikiwaweb.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "stoendpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Stoendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Stoendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the STOEndpoint collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Stoendpoint stoendpoint = new Stoendpoint(...);}
   *   {@code Stoendpoint.STOEndpoint.List request = stoendpoint.sTOEndpoint().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public STOEndpoint sTOEndpoint() {
    return new STOEndpoint();
  }

  /**
   * The "sTOEndpoint" collection of methods.
   */
  public class STOEndpoint {

    /**
     * Create a request for the method "sTOEndpoint.deleteSTOByLoanId".
     *
     * This request holds the parameters needed by the stoendpoint server.  After setting any optional
     * parameters, call the {@link DeleteSTOByLoanId#execute()} method to invoke the remote operation.
     *
     * @param loanid
     * @return the request
     */
    public DeleteSTOByLoanId deleteSTOByLoanId(java.lang.Long loanid) throws java.io.IOException {
      DeleteSTOByLoanId result = new DeleteSTOByLoanId(loanid);
      initialize(result);
      return result;
    }

    public class DeleteSTOByLoanId extends StoendpointRequest<com.sp.fanikiwa.entity.stoendpoint.model.RequestResult> {

      private static final String REST_PATH = "stobyloanid/{loanid}";

      /**
       * Create a request for the method "sTOEndpoint.deleteSTOByLoanId".
       *
       * This request holds the parameters needed by the the stoendpoint server.  After setting any
       * optional parameters, call the {@link DeleteSTOByLoanId#execute()} method to invoke the remote
       * operation. <p> {@link DeleteSTOByLoanId#initialize(com.google.api.client.googleapis.services.Ab
       * stractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param loanid
       * @since 1.13
       */
      protected DeleteSTOByLoanId(java.lang.Long loanid) {
        super(Stoendpoint.this, "DELETE", REST_PATH, null, com.sp.fanikiwa.entity.stoendpoint.model.RequestResult.class);
        this.loanid = com.google.api.client.util.Preconditions.checkNotNull(loanid, "Required parameter loanid must be specified.");
      }

      @Override
      public DeleteSTOByLoanId setAlt(java.lang.String alt) {
        return (DeleteSTOByLoanId) super.setAlt(alt);
      }

      @Override
      public DeleteSTOByLoanId setFields(java.lang.String fields) {
        return (DeleteSTOByLoanId) super.setFields(fields);
      }

      @Override
      public DeleteSTOByLoanId setKey(java.lang.String key) {
        return (DeleteSTOByLoanId) super.setKey(key);
      }

      @Override
      public DeleteSTOByLoanId setOauthToken(java.lang.String oauthToken) {
        return (DeleteSTOByLoanId) super.setOauthToken(oauthToken);
      }

      @Override
      public DeleteSTOByLoanId setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DeleteSTOByLoanId) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DeleteSTOByLoanId setQuotaUser(java.lang.String quotaUser) {
        return (DeleteSTOByLoanId) super.setQuotaUser(quotaUser);
      }

      @Override
      public DeleteSTOByLoanId setUserIp(java.lang.String userIp) {
        return (DeleteSTOByLoanId) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long loanid;

      /**

       */
      public java.lang.Long getLoanid() {
        return loanid;
      }

      public DeleteSTOByLoanId setLoanid(java.lang.Long loanid) {
        this.loanid = loanid;
        return this;
      }

      @Override
      public DeleteSTOByLoanId set(String parameterName, Object value) {
        return (DeleteSTOByLoanId) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "sTOEndpoint.getSTOByLoanId".
     *
     * This request holds the parameters needed by the stoendpoint server.  After setting any optional
     * parameters, call the {@link GetSTOByLoanId#execute()} method to invoke the remote operation.
     *
     * @param loanid
     * @return the request
     */
    public GetSTOByLoanId getSTOByLoanId(java.lang.Long loanid) throws java.io.IOException {
      GetSTOByLoanId result = new GetSTOByLoanId(loanid);
      initialize(result);
      return result;
    }

    public class GetSTOByLoanId extends StoendpointRequest<com.sp.fanikiwa.entity.stoendpoint.model.CollectionResponseSTO> {

      private static final String REST_PATH = "collectionresponse_sto/{loanid}";

      /**
       * Create a request for the method "sTOEndpoint.getSTOByLoanId".
       *
       * This request holds the parameters needed by the the stoendpoint server.  After setting any
       * optional parameters, call the {@link GetSTOByLoanId#execute()} method to invoke the remote
       * operation. <p> {@link GetSTOByLoanId#initialize(com.google.api.client.googleapis.services.Abstr
       * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param loanid
       * @since 1.13
       */
      protected GetSTOByLoanId(java.lang.Long loanid) {
        super(Stoendpoint.this, "GET", REST_PATH, null, com.sp.fanikiwa.entity.stoendpoint.model.CollectionResponseSTO.class);
        this.loanid = com.google.api.client.util.Preconditions.checkNotNull(loanid, "Required parameter loanid must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetSTOByLoanId setAlt(java.lang.String alt) {
        return (GetSTOByLoanId) super.setAlt(alt);
      }

      @Override
      public GetSTOByLoanId setFields(java.lang.String fields) {
        return (GetSTOByLoanId) super.setFields(fields);
      }

      @Override
      public GetSTOByLoanId setKey(java.lang.String key) {
        return (GetSTOByLoanId) super.setKey(key);
      }

      @Override
      public GetSTOByLoanId setOauthToken(java.lang.String oauthToken) {
        return (GetSTOByLoanId) super.setOauthToken(oauthToken);
      }

      @Override
      public GetSTOByLoanId setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetSTOByLoanId) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetSTOByLoanId setQuotaUser(java.lang.String quotaUser) {
        return (GetSTOByLoanId) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetSTOByLoanId setUserIp(java.lang.String userIp) {
        return (GetSTOByLoanId) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long loanid;

      /**

       */
      public java.lang.Long getLoanid() {
        return loanid;
      }

      public GetSTOByLoanId setLoanid(java.lang.Long loanid) {
        this.loanid = loanid;
        return this;
      }

      @Override
      public GetSTOByLoanId set(String parameterName, Object value) {
        return (GetSTOByLoanId) super.set(parameterName, value);
      }
    }

  }

  /**
   * Create a request for the method "getSTOByID".
   *
   * This request holds the parameters needed by the stoendpoint server.  After setting any optional
   * parameters, call the {@link GetSTOByID#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetSTOByID getSTOByID(java.lang.Long id) throws java.io.IOException {
    GetSTOByID result = new GetSTOByID(id);
    initialize(result);
    return result;
  }

  public class GetSTOByID extends StoendpointRequest<com.sp.fanikiwa.entity.stoendpoint.model.STO> {

    private static final String REST_PATH = "sto/{id}";

    /**
     * Create a request for the method "getSTOByID".
     *
     * This request holds the parameters needed by the the stoendpoint server.  After setting any
     * optional parameters, call the {@link GetSTOByID#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetSTOByID#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetSTOByID(java.lang.Long id) {
      super(Stoendpoint.this, "GET", REST_PATH, null, com.sp.fanikiwa.entity.stoendpoint.model.STO.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetSTOByID setAlt(java.lang.String alt) {
      return (GetSTOByID) super.setAlt(alt);
    }

    @Override
    public GetSTOByID setFields(java.lang.String fields) {
      return (GetSTOByID) super.setFields(fields);
    }

    @Override
    public GetSTOByID setKey(java.lang.String key) {
      return (GetSTOByID) super.setKey(key);
    }

    @Override
    public GetSTOByID setOauthToken(java.lang.String oauthToken) {
      return (GetSTOByID) super.setOauthToken(oauthToken);
    }

    @Override
    public GetSTOByID setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetSTOByID) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetSTOByID setQuotaUser(java.lang.String quotaUser) {
      return (GetSTOByID) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetSTOByID setUserIp(java.lang.String userIp) {
      return (GetSTOByID) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetSTOByID setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetSTOByID set(String parameterName, Object value) {
      return (GetSTOByID) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertSTO".
   *
   * This request holds the parameters needed by the stoendpoint server.  After setting any optional
   * parameters, call the {@link InsertSTO#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.sp.fanikiwa.entity.stoendpoint.model.STO}
   * @return the request
   */
  public InsertSTO insertSTO(com.sp.fanikiwa.entity.stoendpoint.model.STO content) throws java.io.IOException {
    InsertSTO result = new InsertSTO(content);
    initialize(result);
    return result;
  }

  public class InsertSTO extends StoendpointRequest<com.sp.fanikiwa.entity.stoendpoint.model.STO> {

    private static final String REST_PATH = "sto";

    /**
     * Create a request for the method "insertSTO".
     *
     * This request holds the parameters needed by the the stoendpoint server.  After setting any
     * optional parameters, call the {@link InsertSTO#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertSTO#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.sp.fanikiwa.entity.stoendpoint.model.STO}
     * @since 1.13
     */
    protected InsertSTO(com.sp.fanikiwa.entity.stoendpoint.model.STO content) {
      super(Stoendpoint.this, "POST", REST_PATH, content, com.sp.fanikiwa.entity.stoendpoint.model.STO.class);
    }

    @Override
    public InsertSTO setAlt(java.lang.String alt) {
      return (InsertSTO) super.setAlt(alt);
    }

    @Override
    public InsertSTO setFields(java.lang.String fields) {
      return (InsertSTO) super.setFields(fields);
    }

    @Override
    public InsertSTO setKey(java.lang.String key) {
      return (InsertSTO) super.setKey(key);
    }

    @Override
    public InsertSTO setOauthToken(java.lang.String oauthToken) {
      return (InsertSTO) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertSTO setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertSTO) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertSTO setQuotaUser(java.lang.String quotaUser) {
      return (InsertSTO) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertSTO setUserIp(java.lang.String userIp) {
      return (InsertSTO) super.setUserIp(userIp);
    }

    @Override
    public InsertSTO set(String parameterName, Object value) {
      return (InsertSTO) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listSTO".
   *
   * This request holds the parameters needed by the stoendpoint server.  After setting any optional
   * parameters, call the {@link ListSTO#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListSTO listSTO() throws java.io.IOException {
    ListSTO result = new ListSTO();
    initialize(result);
    return result;
  }

  public class ListSTO extends StoendpointRequest<com.sp.fanikiwa.entity.stoendpoint.model.CollectionResponseSTO> {

    private static final String REST_PATH = "sto";

    /**
     * Create a request for the method "listSTO".
     *
     * This request holds the parameters needed by the the stoendpoint server.  After setting any
     * optional parameters, call the {@link ListSTO#execute()} method to invoke the remote operation.
     * <p> {@link
     * ListSTO#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListSTO() {
      super(Stoendpoint.this, "GET", REST_PATH, null, com.sp.fanikiwa.entity.stoendpoint.model.CollectionResponseSTO.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListSTO setAlt(java.lang.String alt) {
      return (ListSTO) super.setAlt(alt);
    }

    @Override
    public ListSTO setFields(java.lang.String fields) {
      return (ListSTO) super.setFields(fields);
    }

    @Override
    public ListSTO setKey(java.lang.String key) {
      return (ListSTO) super.setKey(key);
    }

    @Override
    public ListSTO setOauthToken(java.lang.String oauthToken) {
      return (ListSTO) super.setOauthToken(oauthToken);
    }

    @Override
    public ListSTO setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListSTO) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListSTO setQuotaUser(java.lang.String quotaUser) {
      return (ListSTO) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListSTO setUserIp(java.lang.String userIp) {
      return (ListSTO) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer count;

    /**

     */
    public java.lang.Integer getCount() {
      return count;
    }

    public ListSTO setCount(java.lang.Integer count) {
      this.count = count;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListSTO setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @Override
    public ListSTO set(String parameterName, Object value) {
      return (ListSTO) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "nextSTOByDate".
   *
   * This request holds the parameters needed by the stoendpoint server.  After setting any optional
   * parameters, call the {@link NextSTOByDate#execute()} method to invoke the remote operation.
   *
   * @param date
   * @return the request
   */
  public NextSTOByDate nextSTOByDate(com.google.api.client.util.DateTime date) throws java.io.IOException {
    NextSTOByDate result = new NextSTOByDate(date);
    initialize(result);
    return result;
  }

  public class NextSTOByDate extends StoendpointRequest<com.sp.fanikiwa.entity.stoendpoint.model.CollectionResponseSTO> {

    private static final String REST_PATH = "nextSTOByDate/{date}";

    /**
     * Create a request for the method "nextSTOByDate".
     *
     * This request holds the parameters needed by the the stoendpoint server.  After setting any
     * optional parameters, call the {@link NextSTOByDate#execute()} method to invoke the remote
     * operation. <p> {@link NextSTOByDate#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param date
     * @since 1.13
     */
    protected NextSTOByDate(com.google.api.client.util.DateTime date) {
      super(Stoendpoint.this, "POST", REST_PATH, null, com.sp.fanikiwa.entity.stoendpoint.model.CollectionResponseSTO.class);
      this.date = com.google.api.client.util.Preconditions.checkNotNull(date, "Required parameter date must be specified.");
    }

    @Override
    public NextSTOByDate setAlt(java.lang.String alt) {
      return (NextSTOByDate) super.setAlt(alt);
    }

    @Override
    public NextSTOByDate setFields(java.lang.String fields) {
      return (NextSTOByDate) super.setFields(fields);
    }

    @Override
    public NextSTOByDate setKey(java.lang.String key) {
      return (NextSTOByDate) super.setKey(key);
    }

    @Override
    public NextSTOByDate setOauthToken(java.lang.String oauthToken) {
      return (NextSTOByDate) super.setOauthToken(oauthToken);
    }

    @Override
    public NextSTOByDate setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (NextSTOByDate) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public NextSTOByDate setQuotaUser(java.lang.String quotaUser) {
      return (NextSTOByDate) super.setQuotaUser(quotaUser);
    }

    @Override
    public NextSTOByDate setUserIp(java.lang.String userIp) {
      return (NextSTOByDate) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime date;

    /**

     */
    public com.google.api.client.util.DateTime getDate() {
      return date;
    }

    public NextSTOByDate setDate(com.google.api.client.util.DateTime date) {
      this.date = date;
      return this;
    }

    @Override
    public NextSTOByDate set(String parameterName, Object value) {
      return (NextSTOByDate) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeSTO".
   *
   * This request holds the parameters needed by the stoendpoint server.  After setting any optional
   * parameters, call the {@link RemoveSTO#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveSTO removeSTO(java.lang.Long id) throws java.io.IOException {
    RemoveSTO result = new RemoveSTO(id);
    initialize(result);
    return result;
  }

  public class RemoveSTO extends StoendpointRequest<Void> {

    private static final String REST_PATH = "sto/{id}";

    /**
     * Create a request for the method "removeSTO".
     *
     * This request holds the parameters needed by the the stoendpoint server.  After setting any
     * optional parameters, call the {@link RemoveSTO#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveSTO#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveSTO(java.lang.Long id) {
      super(Stoendpoint.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveSTO setAlt(java.lang.String alt) {
      return (RemoveSTO) super.setAlt(alt);
    }

    @Override
    public RemoveSTO setFields(java.lang.String fields) {
      return (RemoveSTO) super.setFields(fields);
    }

    @Override
    public RemoveSTO setKey(java.lang.String key) {
      return (RemoveSTO) super.setKey(key);
    }

    @Override
    public RemoveSTO setOauthToken(java.lang.String oauthToken) {
      return (RemoveSTO) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveSTO setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveSTO) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveSTO setQuotaUser(java.lang.String quotaUser) {
      return (RemoveSTO) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveSTO setUserIp(java.lang.String userIp) {
      return (RemoveSTO) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveSTO setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveSTO set(String parameterName, Object value) {
      return (RemoveSTO) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "retrieveSTO".
   *
   * This request holds the parameters needed by the stoendpoint server.  After setting any optional
   * parameters, call the {@link RetrieveSTO#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RetrieveSTO retrieveSTO(java.lang.Long id) throws java.io.IOException {
    RetrieveSTO result = new RetrieveSTO(id);
    initialize(result);
    return result;
  }

  public class RetrieveSTO extends StoendpointRequest<com.sp.fanikiwa.entity.stoendpoint.model.RequestResult> {

    private static final String REST_PATH = "retrieveSTO/{id}";

    /**
     * Create a request for the method "retrieveSTO".
     *
     * This request holds the parameters needed by the the stoendpoint server.  After setting any
     * optional parameters, call the {@link RetrieveSTO#execute()} method to invoke the remote
     * operation. <p> {@link
     * RetrieveSTO#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RetrieveSTO(java.lang.Long id) {
      super(Stoendpoint.this, "POST", REST_PATH, null, com.sp.fanikiwa.entity.stoendpoint.model.RequestResult.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RetrieveSTO setAlt(java.lang.String alt) {
      return (RetrieveSTO) super.setAlt(alt);
    }

    @Override
    public RetrieveSTO setFields(java.lang.String fields) {
      return (RetrieveSTO) super.setFields(fields);
    }

    @Override
    public RetrieveSTO setKey(java.lang.String key) {
      return (RetrieveSTO) super.setKey(key);
    }

    @Override
    public RetrieveSTO setOauthToken(java.lang.String oauthToken) {
      return (RetrieveSTO) super.setOauthToken(oauthToken);
    }

    @Override
    public RetrieveSTO setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RetrieveSTO) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RetrieveSTO setQuotaUser(java.lang.String quotaUser) {
      return (RetrieveSTO) super.setQuotaUser(quotaUser);
    }

    @Override
    public RetrieveSTO setUserIp(java.lang.String userIp) {
      return (RetrieveSTO) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RetrieveSTO setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RetrieveSTO set(String parameterName, Object value) {
      return (RetrieveSTO) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateSTO".
   *
   * This request holds the parameters needed by the stoendpoint server.  After setting any optional
   * parameters, call the {@link UpdateSTO#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.sp.fanikiwa.entity.stoendpoint.model.STO}
   * @return the request
   */
  public UpdateSTO updateSTO(com.sp.fanikiwa.entity.stoendpoint.model.STO content) throws java.io.IOException {
    UpdateSTO result = new UpdateSTO(content);
    initialize(result);
    return result;
  }

  public class UpdateSTO extends StoendpointRequest<com.sp.fanikiwa.entity.stoendpoint.model.STO> {

    private static final String REST_PATH = "sto";

    /**
     * Create a request for the method "updateSTO".
     *
     * This request holds the parameters needed by the the stoendpoint server.  After setting any
     * optional parameters, call the {@link UpdateSTO#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateSTO#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.sp.fanikiwa.entity.stoendpoint.model.STO}
     * @since 1.13
     */
    protected UpdateSTO(com.sp.fanikiwa.entity.stoendpoint.model.STO content) {
      super(Stoendpoint.this, "PUT", REST_PATH, content, com.sp.fanikiwa.entity.stoendpoint.model.STO.class);
    }

    @Override
    public UpdateSTO setAlt(java.lang.String alt) {
      return (UpdateSTO) super.setAlt(alt);
    }

    @Override
    public UpdateSTO setFields(java.lang.String fields) {
      return (UpdateSTO) super.setFields(fields);
    }

    @Override
    public UpdateSTO setKey(java.lang.String key) {
      return (UpdateSTO) super.setKey(key);
    }

    @Override
    public UpdateSTO setOauthToken(java.lang.String oauthToken) {
      return (UpdateSTO) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateSTO setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateSTO) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateSTO setQuotaUser(java.lang.String quotaUser) {
      return (UpdateSTO) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateSTO setUserIp(java.lang.String userIp) {
      return (UpdateSTO) super.setUserIp(userIp);
    }

    @Override
    public UpdateSTO set(String parameterName, Object value) {
      return (UpdateSTO) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Stoendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Stoendpoint}. */
    @Override
    public Stoendpoint build() {
      return new Stoendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link StoendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setStoendpointRequestInitializer(
        StoendpointRequestInitializer stoendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(stoendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
